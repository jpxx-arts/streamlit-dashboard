import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(
    page_title="An치lise Cl칤nica",
    page_icon="游뽘",
    layout="wide"
)

@st.cache_data
def load_data():
    try:
        df = pd.read_csv('alzheimers_disease_data.csv')
        df.drop(columns=["PatientID", "DoctorInCharge"], inplace=True)
        return df
    except FileNotFoundError:
        st.error("'alzheimers_disease_data.csv' n칚o encontrado")
        return None

df = load_data()

st.title("游뽘 An치lise Cl칤nica e de Comorbidades")

if df is not None:
    st.header('An치lise de Rela칞칫es Cl칤nicas')
    
    fig_mmse_age_scatter = px.scatter(
        df,
        x='MMSE',
        y='Age',
        color='Diagnosis',
        hover_data=['Gender', 'EducationLevel'],
        labels={'MMSE': 'MMSE (Mini-Exame do Estado Mental)', 'Age': 'Idade', 'Diagnosis': 'Diagn칩stico'},
        title='Rela칞칚o entre MMSE e Idade'
    )
    st.plotly_chart(fig_mmse_age_scatter, use_container_width=True)

    fig_adl_functional_scatter = px.scatter(
        df,
        x='FunctionalAssessment',
        y='ADL',
        color='Diagnosis',
        hover_data=['Gender', 'EducationLevel'],
        labels={'FunctionalAssessment': 'Avalia칞칚o Funcional', 'ADL': 'ADL (Atividades da Vida Di치ria)', 'Diagnosis': 'Diagn칩stico'},
        title='Rela칞칚o entre ADL e Avalia칞칚o Funcional'
    )
    st.plotly_chart(fig_adl_functional_scatter, use_container_width=True)

    st.header('An치lise de Comorbidades')
    
    st.subheader('Depress칚o')
    col1, col2 = st.columns(2)
    with col1:
        fig_depression_count = px.histogram(
            df, 
            x='Depression', 
            color='Diagnosis', 
            barmode='group',
            title='Contagem de Diagn칩stico por Depress칚o',
            labels={'Depression': 'Depress칚o', 'count': 'Contagem', 'Diagnosis': 'Diagn칩stico'}
        )
        st.plotly_chart(fig_depression_count, use_container_width=True)
    with col2:
        fig_depression_prop = px.histogram(
            df, 
            x='Depression', 
            color='Diagnosis', 
            barnorm='percent',
            text_auto='.2f',
            title='Propor칞칚o de Diagn칩stico por Depress칚o (%)',
            labels={'Depression': 'Depress칚o', 'percent': 'Porcentagem', 'Diagnosis': 'Diagn칩stico'}
        )
        st.plotly_chart(fig_depression_prop, use_container_width=True)

    st.subheader('Hist칩rico de Les칚o na Cabe칞a')
    col1, col2 = st.columns(2)
    with col1:
        fig_head_injury_count = px.histogram(
            df, 
            x='HeadInjury', 
            color='Diagnosis', 
            barmode='group',
            title='Contagem de Diagn칩stico por Les칚o na Cabe칞a',
            labels={'HeadInjury': 'Les칚o na Cabe칞a', 'count': 'Contagem', 'Diagnosis': 'Diagn칩stico'}
        )
        st.plotly_chart(fig_head_injury_count, use_container_width=True)
    with col2:
        fig_head_injury_prop = px.histogram(
            df, 
            x='HeadInjury', 
            color='Diagnosis', 
            barnorm='percent',
            text_auto='.2f',
            title='Propor칞칚o de Diagn칩stico por Les칚o na Cabe칞a (%)',
            labels={'HeadInjury': 'Les칚o na Cabe칞a', 'percent': 'Porcentagem', 'Diagnosis': 'Diagn칩stico'}
        )
        st.plotly_chart(fig_head_injury_prop, use_container_width=True)
    
    st.subheader('Contagem e propor칞칚o de vari치veis com alta correla칞칚o')

    diagnosis_classif = st.selectbox("Vari치veis:", ["MMSE", "FunctionalAssessment", "MemoryComplaints", "BehavioralProblems", "ADL"])

    col1, col2 = st.columns(2)
    with col1:
        fig_head_injury_count = px.histogram(
            df, 
            x=diagnosis_classif, 
            color='Diagnosis', 
            barmode='group',
            title=f'Contagem de Diagn칩stico por {diagnosis_classif}',
            labels={'count': 'Contagem', 'Diagnosis': 'Diagn칩stico'}
        )
        st.plotly_chart(fig_head_injury_count, use_container_width=True)
    with col2:
        fig_head_injury_prop = px.histogram(
            df, 
            x=diagnosis_classif, 
            color='Diagnosis', 
            barnorm='percent',
            text_auto='.2f',
            title=f'Propor칞칚o de Diagn칩stico por {diagnosis_classif}',
            labels={'percent': 'Porcentagem', 'Diagnosis': 'Diagn칩stico'}
        )
        st.plotly_chart(fig_head_injury_prop, use_container_width=True)


